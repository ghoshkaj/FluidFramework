# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
parameters:
- name: pathToTelemetryGenerator
  type: string
  default: '$(Build.SourcesDirectory)/tools/telemetry-generator'
- name: devFeedUrl
  type: string
- name: officeFeedUrl
  type: string
- name: isCheckoutNeeded
  type: boolean
  default: false
steps:
- ${{ if eq(parameters.isCheckoutNeeded, true) }}:
  - checkout: self
    clean: true
- template: /tools/pipelines/templates/include-use-node-version.yml@self
- task: Bash@3
  displayName: Print parameter/variable values for template
  inputs:
    targetType: 'inline'
    script: |
      echo "
      Parameters:
        pathToTelemetryGenerator=${{ parameters.pathToTelemetryGenerator }}
        devFeedUrl={{ parameters.devFeedUrl }}
        officeFeedUrl={{ parameters.officeFeedUrl }}
      "
- task: Bash@3
  displayName: Initialize npmrc
  inputs:
    targetType: 'inline'
    workingDirectory: ${{ parameters.pathToTelemetryGenerator }}
    script: |
      echo Initialize package
      npm init --yes
      echo Generating .npmrc
      echo "registry=https://registry.npmjs.org" >> ./.npmrc
      echo "always-auth=false" >> ./.npmrc
      echo "@fluidframework:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@fluid-experimental:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@fluid-tools:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@fluid-internal:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@fluid-private:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@ff-internal:registry=${{ parameters.devFeedUrl }}" >> ./.npmrc
      echo "@microsoft:registry=${{ parameters.officeFeedUrl }}" >> ./.npmrc
      echo "always-auth=true" >> ./.npmrc
      cat .npmrc
- task: npmAuthenticate@0
  displayName: 'npm authenticate (internal ADO feeds)'
  inputs:
    workingFile: ${{ parameters.pathToTelemetryGenerator }}/.npmrc
- task: Npm@1
  displayName: 'npm install aria logger'
  inputs:
    workingDir: ${{ parameters.pathToTelemetryGenerator }}
    command: 'custom'
    customCommand: 'install @ff-internal/aria-logger'
    customRegistry: 'useNpmrc'
- task: Bash@3
  displayName: 'Prepare telemetry-generator'
  inputs:
    targetType: 'inline'
    workingDirectory: ${{ parameters.pathToTelemetryGenerator }}
    script: |
      npm i;
      npm run build:compile;